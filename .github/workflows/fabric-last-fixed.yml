name: Deploy Fabric Content

on:
  workflow_dispatch:

jobs:
  deploy-dev-to-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get Azure AD token
        id: get-token
        run: |
          echo "üîê Getting Azure AD token..."
          ACCESS_TOKEN=$(curl -X POST \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "client_id=${{ secrets.AZURE_CLIENT_ID }}&scope=https://api.fabric.microsoft.com/.default&client_secret=${{ secrets.AZURE_CLIENT_SECRET }}&grant_type=client_credentials" \
            "https://login.microsoftonline.com/${{ secrets.AZURE_TENANT_ID }}/oauth2/v2.0/token" | jq -r '.access_token')

          if [ -z "$ACCESS_TOKEN" ]; then
            echo "‚ùå ERROR: Failed to obtain access token."
            exit 1
          fi

          echo "‚úÖ Token obtained"
          echo "access_token=$ACCESS_TOKEN" >> $GITHUB_OUTPUT

      - name: Deploy content from Dev to Test workspace
        run: |
          echo "üöÄ Starting deployment from Dev to Test workspace..."

          ACCESS_TOKEN="${{ steps.get-token.outputs.access_token }}"
          DEV_WORKSPACE_ID="${{ secrets.DEV_WORKSPACE_ID }}"
          TEST_WORKSPACE_ID="${{ secrets.TEST_WORKSPACE_ID }}"
          FABRIC_API_URL="https://api.fabric.microsoft.com/v1"

          if [ -z "$DEV_WORKSPACE_ID" ] || [ -z "$TEST_WORKSPACE_ID" ]; then
            echo "‚ùå ERROR: Workspace IDs are not set."
            exit 1
          fi

          JSON_PAYLOAD=$(jq -n --arg target "$TEST_WORKSPACE_ID" '{targetWorkspaceId: $target}')

          DEPLOY_RESPONSE=$(curl -s -X POST \
            "$FABRIC_API_URL/workspaces/$DEV_WORKSPACE_ID/deployWorkspace" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD")

          echo "üì¶ Deployment response:"
          echo "$DEPLOY_RESPONSE"
