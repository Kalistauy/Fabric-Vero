name: Fabric Deployment Pipeline

on:
  workflow_dispatch: {}

jobs:
  deploy-dev-to-test:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check available scripts
        shell: pwsh
        run: Get-ChildItem -Recurse

      - name: "Run deployment Dev → Test"
        shell: pwsh
        run: ./DevToTest.ps1 -ClientId "${{ secrets.CLIENT_ID }}" -TenantId "${{ secrets.TENANT_ID }}" -ClientSecret "${{ secrets.CLIENT_SECRET }}"

      - name: Send alert to Teams
        shell: pwsh
        run: |
          $payload = @{ text = '✅ Deployment Dev → Test successfully completed in GitHub Actions.' } | ConvertTo-Json -Compress
          Invoke-RestMethod -Uri "${{ secrets.TEAMS_WEBHOOK }}" -Method POST -Body $payload -ContentType 'application/json'

  deploy-test-to-prod:
    runs-on: windows-latest
    needs:
      - deploy-dev-to-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check available scripts
        shell: pwsh
        run: Get-ChildItem -Recurse

      - name: "Run deployment Test → Prod"
        shell: pwsh
        run: ./TestToProd.ps1 -ClientId "${{ secrets.CLIENT_ID }}" -TenantId "${{ secrets.TENANT_ID }}" -ClientSecret "${{ secrets.CLIENT_SECRET }}"

      - name: "Confirm deployment success"
        shell: pwsh
        run: "Write-Host '✅ Deployment Test → Prod completed successfully.' -ForegroundColor Green"

      - name: Send alert to Teams
        shell: pwsh
        run: |
          $payload = @{ text = '✅ Deployment Test → Prod successfully completed in GitHub Actions.' } | ConvertTo-Json -Compress
          Invoke-RestMethod -Uri "${{ secrets.TEAMS_WEBHOOK }}" -Method POST -Body $payload -ContentType 'application/json'
