name: Microsoft Fabric CI/CD
true:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch: null
env:
  FABRIC_API_URL: https://api.fabric.microsoft.com/v1
  AZURE_LOGIN_URL: https://login.microsoftonline.com
jobs:
  get-token-and-workspace:
    name: Get Azure AD Token and Workspace ID
    runs-on: ubuntu-latest
    outputs:
      access_token: ${{ steps.get_token.outputs.access_token }}
      workspace_id: ${{ steps.get_workspace.outputs.workspace_id }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Get Azure AD Token
      id: get_token
      run: "TOKEN_RESPONSE=$(curl -s -X POST \\\n  \"${{ env.AZURE_LOGIN_URL }}/${{\
        \ secrets.TENANT_ID }}/oauth2/v2.0/token\" \\\n  -H \"Content-Type: application/x-www-form-urlencoded\"\
        \ \\\n  -d \"client_id=${{ secrets.CLIENT_ID }}\" \\\n  -d \"client_secret=${{\
        \ secrets.CLIENT_SECRET }}\" \\\n  -d \"scope=https://api.fabric.microsoft.com/.default\"\
        \ \\\n  -d \"grant_type=client_credentials\")\n\nACCESS_TOKEN=$(echo \"$TOKEN_RESPONSE\"\
        \ | jq -r '.access_token')\necho \"::add-mask::$ACCESS_TOKEN\"\necho \"access_token=$ACCESS_TOKEN\"\
        \ >> $GITHUB_OUTPUT\n"
    - name: Get Workspace ID
      id: get_workspace
      run: "WORKSPACE_RESPONSE=$(curl -s -X GET \\\n  \"${{ env.FABRIC_API_URL }}/workspaces\"\
        \ \\\n  -H \"Authorization: Bearer ${{ steps.get_token.outputs.access_token\
        \ }}\" \\\n  -H \"Content-Type: application/json\")\n\nWORKSPACE_ID=$(echo\
        \ \"$WORKSPACE_RESPONSE\" | jq -r --arg name \"${{ vars.WORKSPACE_NAME }}\"\
        \ '.value[] | select(.displayName == $name) | .id')\necho \"workspace_id=$WORKSPACE_ID\"\
        \ >> $GITHUB_OUTPUT\necho \"Found workspace: $WORKSPACE_ID\"\n"
  deploy-dev-to-test:
    name: Deploy from Dev to Test
    needs: get-token-and-workspace
    runs-on: ubuntu-latest
    outputs:
      access_token: ${{ needs.get-token-and-workspace.outputs.access_token }}
    steps:
    - name: Debug variables
      run: "\n      echo \"ACCESS_TOKEN=${{ needs.get-token-and-workspace.outputs.access_token\
        \ }}\"\n      echo \"DEV_WORKSPACE_ID=${{ secrets.DEV_WORKSPACE_ID }}\"\n\
        \      echo \"TEST_WORKSPACE_ID=${{ secrets.TEST_WORKSPACE_ID }}\"\n    "
    - name: Deploy content
      run: "echo \"Starting deployment from Dev to Test workspace...\"\n\nACCESS_TOKEN=\"\
        ${{ needs.get-token-and-workspace.outputs.access_token }}\"\nDEV_WORKSPACE_ID=\"\
        ${{ secrets.DEV_WORKSPACE_ID }}\"\nTEST_WORKSPACE_ID=\"${{ secrets.TEST_WORKSPACE_ID\
        \ }}\"\n\nJSON_PAYLOAD=$(jq -n --arg target \"$TEST_WORKSPACE_ID\" '{targetWorkspaceId:\
        \ $target}')\n\nDEPLOY_RESPONSE=$(curl -s -X POST \\\n  \"${{ env.FABRIC_API_URL\
        \ }}/workspaces/$DEV_WORKSPACE_ID/deployWorkspace\" \\\n  -H \"Authorization:\
        \ Bearer $ACCESS_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n\
        \  -d \"$JSON_PAYLOAD\")\n\necho \"Deployment initiated\"\necho \"$DEPLOY_RESPONSE\"\
        \n"
      env:
        ACCESS_TOKEN: ${{ needs.get-token-and-workspace.outputs.access_token }}
        DEV_WORKSPACE_ID: ${{ secrets.DEV_WORKSPACE_ID }}
        TEST_WORKSPACE_ID: ${{ secrets.TEST_WORKSPACE_ID }}
  deploy-test-to-prod:
    name: Deploy from Test to Prod
    needs: deploy-dev-to-test
    runs-on: ubuntu-latest
    steps:
    - name: Copy content from Test to Prod
      run: "echo \"Starting deployment from Test to Prod workspace...\"\n\nACCESS_TOKEN=\"\
        ${{ needs.deploy-dev-to-test.outputs.access_token }}\"\nTEST_WORKSPACE_ID=\"\
        ${{ secrets.TEST_WORKSPACE_ID }}\"\nPROD_WORKSPACE_ID=\"${{ secrets.PROD_WORKSPACE_ID\
        \ }}\"\n\nJSON_PAYLOAD=$(jq -n --arg target \"$PROD_WORKSPACE_ID\" '{targetWorkspaceId:\
        \ $target}')\n\nDEPLOY_RESPONSE=$(curl -s -X POST \\\n  \"${{ env.FABRIC_API_URL\
        \ }}/workspaces/$TEST_WORKSPACE_ID/deployWorkspace\" \\\n  -H \"Authorization:\
        \ Bearer $ACCESS_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n\
        \  -d \"$JSON_PAYLOAD\")\n\necho \"Deployment to Prod completed\"\necho \"\
        $DEPLOY_RESPONSE\"\n"
